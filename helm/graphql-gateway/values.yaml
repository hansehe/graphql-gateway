# Default values for graphql-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

enabled: true
replicaCount: 1

image:
  repository: hansehe/graphql-gateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

healthCheckUrl: /status/health
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
environmentVariables: {}
  # HOST: http://graphql.localhost
  # GRAPHQL_UPDATE_GATEWAY_WITH_TIMER: true
  # GRAPHQL_UPDATE_GATEWAY_INTERVAL_MS: 60000
  # GRAPHQL_UPDATE_GATEWAY_WITH_MQTT: true
  # GRAPHQL_UPDATE_GATEWAY_MQTT_CONNECTION_STRING: ws://rabbitmq:15675/ws
  # GRAPHQL_UPDATE_GATEWAY_MQTT_SUBSCRIPTION_TOPIC: graphql-gateway/update
  # GRAPHQL_UPDATE_GATEWAY_MQTT_CLIENT_ID: mqtt-graphql-gateway
  # GRAPHQL_UPDATE_GATEWAY_MQTT_USERNAME: mqtt
  # GRAPHQL_UPDATE_GATEWAY_MQTT_PASSWORD: mqtt
  # GRAPHQL_UPDATE_GATEWAY_USE_BACKOFF_POLICY: true
  # GRAPHQL_UPDATE_GATEWAY_BACKOFF_POLICY_MAX_DELAY_MS: 100000
  # GRAPHQL_UPDATE_GATEWAY_BACKOFF_POLICY_NUM_OF_ATTEMPTS: 10
  # GRAPHQL_URL_0: http://service_1/graphql
  # GRAPHQL_URL_1: http://service_2/graphql

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "/status/health"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
